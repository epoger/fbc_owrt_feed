# FBWIFI

# Log to both klogd (so it will show up on serial port and "dmesg")
# and syslogd (so it will show up on "logread -e fbwifi")
log()
{
	echo "$*" >/dev/kmsg
	logger -t fbwifi-device "$*"
}

# Update color(s) displayed by the LED, if those have changed since the last call.
update_led_state()
{
	if [ "$PREV_LED_STATE" == $1 ]
	then
		return
	fi
	PREV_LED_STATE=$1

	case $1 in
	BlueGreen)
		# indicates: FBWiFi is running, but not yet registered with a business
		led_off red
		led_on green
		led_timer blue 500 500
		;;
	BlueViolet)
		# indicates: this script has launched
		led_timer red 500 500
		led_off green
		led_on blue
		;;
	SolidBlue)
		# indicates: FBWiFi is running and registered with a business (ready for customers!)
		led_off red
		led_off green
		led_on blue
		;;
	esac
}

log "launched bootscript2"
update_led_state BlueViolet

# Set LAN (wireless) IP subnet to something that does not conflict with WAN IP subnet
ROUTER_IP=$(ip route | grep default | awk '{print $3}')
if [[ $ROUTER_IP == "192*" ]]; then
	MY_LAN_IP="172.17.0.1"
else
	MY_LAN_IP="192.168.0.1"
fi
log "ROUTER_IP is $ROUTER_IP, so MY_LAN_IP will be $MY_LAN_IP"
uci set network.lan.ipaddr="$MY_LAN_IP"

# Allow br-lan to come up (requires "/etc/init.d/network restart" to take effect)
uci set network.lan.disabled=0

# Enable NAT forwarding from lan to wan
uci add firewall forwarding 
uci set firewall.@forwarding[-1].src='lan'
uci set firewall.@forwarding[-1].dest='wan'

# Disable SSH access, now that we're running OK.
uci set firewall.AllowSshAdminRule.enabled='false'

# TODO: in production, remove this block
# For testing only: Open up SSH and HTTP admin access, on both Ethernet
# and wireless, with no password, for testing purposes.
echo "root::0:0:99999:7:::" >/tmp/shadow
grep -v ^root /etc/shadow >>/tmp/shadow
cp /tmp/shadow /etc/shadow
uci set firewall.AllowSshAdminRule.src='*'
uci set firewall.AllowSshAdminRule.enabled='true'
uci set firewall.AllowHttpAdminRule.src='*'
uci set firewall.AllowHttpAdminRule.enabled='true'

# Allow DNS requests through the firewall.
uci set firewall.AllowDnsRequestRule=rule
uci set firewall.AllowDnsRequestRule.proto='*'
uci set firewall.AllowDnsRequestRule.src='lan'
uci set firewall.AllowDnsRequestRule.dest_port='53'
uci set firewall.AllowDnsRequestRule.target='ACCEPT'
uci set firewall.AllowDnsRequestRule.enabled='true'

# Finally, open up WiFi (no encryption) so users can connect.
# TODO: Wait for the FBWiFi Captive Portal to be in place before doing this.
# TODO: Set the SSID to "Guest Wi-Fi" as the instructions sheet says.
RAWMAC1=$(cat /sys/class/net/eth0/address)
RAWMAC2=${RAWMAC1//:/}
MACLAST6=${RAWMAC2:6:6}
FWVERSION=$(cat /etc/fbwifi-device/fwversion)
COMMITHASH=${FWVERSION/*_/}
uci set wireless.radio0.channel="auto"
uci set wireless.radio0.hwmode="11g"
uci set wireless.radio0.htmode="HT20"
uci set wireless.radio0.disabled="0"
uci set wireless.default_radio0.ssid="PogerLounge2.4"
uci set wireless.default_radio0.encryption="psk2"
uci set wireless.default_radio0.encryption="butterpopcorn"
uci set wireless.radio1.channel="auto"
uci set wireless.radio1.hwmode="11a"
uci set wireless.radio1.htmode="VHT40"
uci set wireless.radio1.disabled="0"
uci set wireless.default_radio1.ssid="PogerLounge5.0"
uci set wireless.default_radio1.encryption="psk2"
uci set wireless.default_radio1.encryption="butterpopcorn"

uci commit
reload_config
/etc/init.d/network restart

# Postpone automatic reboot for 24 hours.
# TODO: In production, replace this with repeated heartbeat calls.
/etc/fbwifi-device/rebootInSeconds.sh 86400