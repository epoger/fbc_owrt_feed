# FBWIFI

# Log to both klogd (so it will show up on serial port and "dmesg")
# and syslogd (so it will show up on "logread -e fbwifi")
log()
{
	echo "fbwifi-device: $*" >/dev/kmsg
	logger -t fbwifi-device "$*"
}

# Downloads a file from URL $1 into destfile $2, replacing the file at that path
# (if any) atomically.
# We check not only that wget succeeded, but also that the downloaded file
# contains "FBWIFI" (indicating that it is not a boilerplate server response).
# Retries until success... if never successful, we count on the reboot timer
# to finally exit the loop (by rebooting the device).
load_file_blocking()
{
	dest_path=$2
	temp_path=$(mktemp)
	log "load_file_blocking $1"

	while true; do
		if wget -O $temp_path $1 && grep -q FBWIFI $temp_path
		then {
			mv $temp_path $dest_path
			return 0
		}
		fi
		log "unable to download $1 , will retry"
		sleep 30
	done
}


case $(fw_printenv -n fbbranch) in
canary)
	RELEASE_BRANCH=canary
	RELEASE_TAG=20211203a
	;;
beta)
	RELEASE_BRANCH=beta
	RELEASE_TAG=20211203a
	;;
*)
	RELEASE_BRANCH=stable
	RELEASE_TAG=20211203a
	;;
esac
RELEASE_TAG_BASE_URL="https://raw.githubusercontent.com/epoger/fbc_owrt_feed/${RELEASE_TAG}/fbwifi-device-boot"

log "RELEASE_BRANCH=${RELEASE_BRANCH}"
log "RELEASE_TAG=${RELEASE_TAG}"
log "RELEASE_TAG_BASE_URL=${RELEASE_TAG_BASE_URL}"
echo ${RELEASE_BRANCH} >/etc/fbwifi-device/releasebranch
echo ${RELEASE_TAG} >/etc/fbwifi-device/releasetag
echo ${RELEASE_TAG_BASE_URL} >/etc/fbwifi-device/releasetagbaseurl

BOOTSCRIPT3_URL="${RELEASE_TAG_BASE_URL}/scripts/bootscript3"
BOOTSCRIPT3_PATH=/tmp/bootscript3
log "BOOTSCRIPT3_URL=${BOOTSCRIPT3_URL}"
load_file_blocking "$BOOTSCRIPT3_URL" "$BOOTSCRIPT3_PATH"
source $BOOTSCRIPT3_PATH
