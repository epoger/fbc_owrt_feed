#!/bin/sh
logger -t fbwifi-device "launched bootscript2"

# Device-specific logic to deal with image backups in flash.
HWVERSION=$(cat /etc/fbwifi-device/hwversion)
logger -t fbwifi-device "HWVERSION is $HWVERSION"
case "$HWVERSION" in
	cig_wf808)
		IMAGE1_HEADER=$(dd if=/dev/mtdblock3 bs=16 count=1 | hexdump -e '16/1 "%02x" "\n"')
		IMAGE2_HEADER=$(dd if=/dev/mtdblock5 bs=16 count=1 | hexdump -e '16/1 "%02x" "\n"')
		if [ "$IMAGE1_HEADER" = "$IMAGE2_HEADER" ]; then
			logger -t fbwifi-device "image1 and image2 headers are equal; no copy needed"
		elif [ "$IMAGE2_HEADER" = "00000000000000000000000000000000" ]; then
			logger -t fbwifi-device "image2 is already zeroed out; nothing we can do"
		else
			logger -t fbwifi-device "image1 and image2 headers differ; asking bootloader to copy image1 to image2"
			dd if=/dev/zero of=/dev/mtdblock5 bs=1 count=16
			reboot
		fi
		;;
esac

# Set LAN (wireless) IP subnet to something that does not conflict with WAN IP subnet
ROUTER_IP=$(ip route | grep default | awk '{print $3}')
if [[ $ROUTER_IP == "192*" ]]; then
	MY_LAN_IP="172.17.0.1"
else
	MY_LAN_IP="192.168.0.1"
fi
logger -t fbwifi-device "ROUTER_IP is $ROUTER_IP, so MY_LAN_IP will be $MY_LAN_IP"
uci set network.lan.ipaddr="$MY_LAN_IP"

# Finally, open up WiFi (no encryption) so users can connect.
# TODO: Wait for the FBWiFi Captive Portal to be in place before doing this.
uci set wireless.default_radio0.ssid="FBWiFi Setup"
uci set wireless.default_radio0.encryption="none"

uci commit
reload_config
